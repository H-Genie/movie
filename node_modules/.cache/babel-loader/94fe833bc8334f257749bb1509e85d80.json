{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Genie\\\\React\\\\movie\\\\src\\\\App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movie: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get('https://yts-proxy.now.sh/list_movies.json');\n      this.setState({\n        movies: movies,\n        isLoading: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"loader_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"Loading...\")) : /*#__PURE__*/React.createElement(\"div\", {\n      class: \"movies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, movies.map(movie => /*#__PURE__*/React.createElement(Movie, {\n      key: movie.id,\n      id: movie.id,\n      year: movie.year,\n      title: movie.title,\n      summary: movie.summary,\n      poster: movie.poster,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Genie/React/movie/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movie","getMovies","data","movies","get","setState","render","map","id","year","title","summary","poster","componentDidMount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,SAAS,EAAG,IADN;AAENC,MAAAA,KAAK,EAAG;AAFF,KAFwB;;AAAA,SAOhCC,SAPgC,GAOpB,YAAY;AACtB,YAAM;AACJC,QAAAA,IAAI,EAAG;AACLA,UAAAA,IAAI,EAAG;AAACC,YAAAA;AAAD;AADF;AADH,UAIF,MAAMT,KAAK,CAACU,GAAN,CAAU,2CAAV,CAJV;AAMA,WAAKC,QAAL,CAAc;AAACF,QAAAA,MAAM,EAAGA,MAAV;AAAkBJ,QAAAA,SAAS,EAAG;AAA9B,OAAd;AACD,KAf+B;AAAA;;AAiBhCO,EAAAA,MAAM,GAAG;AACP,UAAM;AAACP,MAAAA,SAAD;AAAYI,MAAAA;AAAZ,QAAsB,KAAKL,KAAjC;AACA,wBACE;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BC,SAAS,gBACnC;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADmC,gBAKnC;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,MAAM,CAACI,GAAP,CAAWP,KAAK,iBACf,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACQ,EADb;AAEE,MAAA,EAAE,EAAER,KAAK,CAACQ,EAFZ;AAGE,MAAA,IAAI,EAAER,KAAK,CAACS,IAHd;AAIE,MAAA,KAAK,EAAET,KAAK,CAACU,KAJf;AAKE,MAAA,OAAO,EAAEV,KAAK,CAACW,OALjB;AAME,MAAA,MAAM,EAAEX,KAAK,CAACY,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CALF,CADF;AAqBD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,SAAL;AACD;;AA5C+B;;AAgDlC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie'\n\nclass App extends React.Component {\n  \n  state = {\n    isLoading : true,\n    movie : []\n  };\n\n  getMovies = async () => {\n    const {\n      data : {\n        data : {movies}\n      }\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json');\n\n    this.setState({movies : movies, isLoading : false})\n  }\n\n  render() {\n    const {isLoading, movies} = this.state;\n    return (\n      <section class=\"container\">{isLoading ? (\n        <div class=\"loader\">\n          <span class=\"loader_text\">Loading...</span>\n        </div>\n      ) : (\n        <div class=\"movies\">\n          {movies.map(movie => (\n            <Movie \n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary}\n              poster={movie.poster}\n            />\n          ))}\n        </div>\n      )}\n      </section>\n    )\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}