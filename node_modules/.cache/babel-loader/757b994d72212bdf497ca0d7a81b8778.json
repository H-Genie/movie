{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Genie\\\\node.js\\\\react\\\\src\\\\App.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n      console.log(movies.data.data.movies);\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, isLoading ? \"Loading...\" : \"We are ready\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Genie/node.js/react/src/App.js"],"names":["React","axios","App","Component","state","isLoading","movies","getMovies","get","console","log","data","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAG,IADN;AAENC,MAAAA,MAAM,EAAG;AAFH,KADuB;;AAAA,SAM/BC,SAN+B,GAMnB,YAAW;AACrB,YAAMD,MAAM,GAAG,MAAML,KAAK,CAACO,GAAN,CAAU,2CAAV,CAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,IAAP,CAAYA,IAAZ,CAAiBL,MAA7B;AACD,KAT8B;AAAA;;AAW/BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,SAAL;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAACR,MAAAA;AAAD,QAAc,KAAKD,KAAzB;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,SAAS,GAAG,YAAH,GAAkB,cAAjC,CAAP;AACD;;AAlB8B;;AAqBjC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movies : []\n  }\n  \n  getMovies = async() => {\n    const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    console.log(movies.data.data.movies);\n  }\n  \n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {isLoading} = this.state;\n    return <div>{isLoading ? \"Loading...\" : \"We are ready\"}</div>\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}